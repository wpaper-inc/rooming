# Generated by Django 2.1.3 on 2018-11-09 17:12

import django.contrib.postgres.fields
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import lib.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', lib.fields.AutoCreatedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('updated_at', lib.fields.AutoLastModifiedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('live', lib.fields.IndexedLiveField(default=True)),
                ('product_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=300)),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), size=20)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('price', models.IntegerField()),
                ('release_date', models.DateField(blank=True, default=None, null=True)),
                ('model', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('external_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'verbose_name': 'Product/商品',
                'verbose_name_plural': 'Products/商品',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', lib.fields.AutoCreatedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('updated_at', lib.fields.AutoLastModifiedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('live', lib.fields.IndexedLiveField(default=True)),
                ('feature_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('label', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'ProductFeatue/商品詳細情報',
                'verbose_name_plural': 'ProductFeatues/商品詳細情報',
                'db_table': 'product_feature',
            },
        ),
        migrations.CreateModel(
            name='ProductFeatureValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', lib.fields.AutoCreatedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('updated_at', lib.fields.AutoLastModifiedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('live', lib.fields.IndexedLiveField(default=True)),
                ('feature_value_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('value', models.CharField(max_length=100)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.ProductFeature')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
            ],
            options={
                'verbose_name': 'ProductFeatureValue/商品詳細情報値',
                'verbose_name_plural': 'ProductFeatureValues/商品詳細情報値',
                'db_table': 'product_feature_value',
            },
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', lib.fields.AutoCreatedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('updated_at', lib.fields.AutoLastModifiedField(db_index=True, default=lib.fields.unix_timestamp, editable=False)),
                ('live', lib.fields.IndexedLiveField(default=True)),
                ('store_product_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('num_stock', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Store')),
            ],
            options={
                'verbose_name': 'StoreProduct/店舗商品関連',
                'verbose_name_plural': 'StoreProducts/店舗商品関連',
                'db_table': 'store_product',
            },
        ),
        migrations.AddIndex(
            model_name='productfeature',
            index=models.Index(fields=['feature_id'], name='product_fea_feature_53457d_idx'),
        ),
        migrations.AddIndex(
            model_name='productfeature',
            index=models.Index(fields=['label'], name='product_fea_label_00bcae_idx'),
        ),
        migrations.AddField(
            model_name='product',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Account'),
        ),
        migrations.AddIndex(
            model_name='storeproduct',
            index=models.Index(fields=['store_product_id'], name='store_produ_store_p_7b3d8a_idx'),
        ),
        migrations.AddIndex(
            model_name='storeproduct',
            index=models.Index(fields=['product'], name='store_produ_product_f99384_idx'),
        ),
        migrations.AddIndex(
            model_name='storeproduct',
            index=models.Index(fields=['store'], name='store_produ_store_i_1f9e7f_idx'),
        ),
        migrations.AddIndex(
            model_name='productfeaturevalue',
            index=models.Index(fields=['feature_value_id'], name='product_fea_feature_8d2721_idx'),
        ),
        migrations.AddIndex(
            model_name='productfeaturevalue',
            index=models.Index(fields=['value'], name='product_fea_value_c4683b_idx'),
        ),
        migrations.AddIndex(
            model_name='productfeaturevalue',
            index=models.Index(fields=['product', 'feature'], name='product_fea_product_cbf63d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_id'], name='product_product_a470af_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['account'], name='product_account_16c5cc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['title'], name='product_title_9e36ed_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='product_price_d2c05d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['release_date'], name='product_release_9dd189_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['external_id'], name='product_externa_0bf4ab_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_id', 'account'], name='product_product_68124c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('account', 'external_id', 'live')},
        ),
    ]
